"Resources": {
  "HamsterEC2Instance": {
    "Type": "AWS::EC2::Instance",
    "Properties": {
      "InstanceType": { "Ref": "InstanceTypeParameter" },
      "SecurityGroupIds": [ { "Ref": "HamsterSecurityGroup" } ],
      "KeyName": { "Ref": "KeyNameParameter" },
      "ImageId": { "Ref": "ImageIdParameter"},
      "UserData": { "Fn::FindInMap": ["Static", "UserData", "Value"] }
    }
  },

  "HamsterSecurityGroup": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "GroupDescription": "Enable SSH access via port 22",
      "SecurityGroupIngress": [ {
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }, {
        "IpProtocol": "tcp",
        "FromPort": "3000",
        "ToPort": "3000",
        "CidrIp": "0.0.0.0/0"
      } ],
      "VpcId": { "Ref": "VPCIdParameter" }
    }
  },

  "HamsterAutoScalingGroup": {
    "Type": "AWS::AutoScaling::AutoScalingGroup",
    "Properties": {
      "AvailabilityZones": [
        { "Fn::Select": [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
        { "Fn::Select": [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
      ],
      "LaunchConfigurationName": { "Ref": "HamsterLaunchConfiguration" },
      "MaxSize": "2",
      "MinSize": "1",
      "TargetGroupARNs": [ { "Ref": "HamsterTargetGroup" } ]
    }
  },

  "HamsterAutoScalingGroupPolicy": {
    "Type": "AWS::AutoScaling::ScalingPolicy",
    "Properties": {
      "AdjustmentType": "ChangeInCapacity",
      "AutoScalingGroupName": { "Ref": "HamsterAutoScalingGroup"},
      "PolicyType": "TargetTrackingScaling",
      "TargetTrackingConfiguration": {
        "PredefinedMetricSpecification": {
          "PredefinedMetricType": "ASGAverageCPUUtilization"
        },
        "TargetValue": 5
      }
    }
  },

  "HamsterLaunchConfiguration": {
    "Type": "AWS::AutoScaling::LaunchConfiguration",
    "Properties": {
      "IamInstanceProfile": { "Ref": "HamsterIAMInstanceProfile"},
      "ImageId": { "Ref": "ImageIdParameter"},
      "InstanceType": { "Ref": "InstanceTypeParameter"},
      "KeyName": { "Ref": "KeyNameParameter" },
      "SecurityGroups": [ { "Ref": "HamsterSecurityGroup" } ],
      "UserData": { "Fn::FindInMap": ["Static", "UserData", "Value"] }
    }
  },

  "HamsterTargetGroup": {
    "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
    "Properties" : {
      "Port" : 3000,
      "Protocol" : "HTTP",
      "Targets": [{ "Id": { "Ref": "HamsterEC2Instance" } }],
      "VpcId" : { "Ref": "VPCIdParameter" }
    }
  },

  "HamsterEC2InstanceRole": {
    "Type": "AWS::IAM::Role",
    "Properties": {
      "AssumeRolePolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "ec2.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      },
      "ManagedPolicyArns": [ "arn:aws:iam::aws:policy/AdministratorAccess" ]
    }
  },

  "HamsterIAMInstanceProfile": {
    "Type": "AWS::IAM::InstanceProfile",
    "Properties": {
      "Roles": [ { "Ref": "HamsterEC2InstanceRole" } ]
    }
  },

  "HamsterLoadBalancerSecurityGroup": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "GroupDescription": "Enable Load Balancer connections on port 80",
      "SecurityGroupIngress": [ {
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      } ]
    }
  },

  "HamsterLoadBalancer": {
    "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
    "Properties" : {
      "SecurityGroups" : [{ "Fn::GetAtt": ["HamsterLoadBalancerSecurityGroup", "GroupId"] }],
      "Subnets" : { "Ref": "SubnetListParameter" }
    }
  },

  "HamsterListener": {
    "Type" : "AWS::ElasticLoadBalancingV2::Listener",
    "Properties" : {
      "DefaultActions" : [
        {
          "TargetGroupArn": { "Ref": "HamsterTargetGroup" },
          "Type": "forward"
        }
      ],
      "LoadBalancerArn" : { "Ref": "HamsterLoadBalancer" },
      "Port" : 80,
      "Protocol" : "HTTP"
    }
  }
},
